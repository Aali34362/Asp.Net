What is MiddleWare ?
Middle ware is a component assembled into app or api pipeline
to handle requests and responses.
Middleware are chain one after other so each of them get to
choose whether to pass the request to the next component
 or not and also perform work before and after the next components

 Startup Class ?
 A start up class is where every thing wired up for the asp.net core application
 It has by default two methods ConfigureServices() and Configure()

 ConfigureServices() is not mandatory method
 Configure() is a mandatory method that should be there
 in the Startup class
 In Configure() is where middleware is setup for asp.net core

 app.Run(RequestDelegate handler) -> Adds a terminal middleware Delegate to the applications
 request pipeline.

//The middleware is handling all the request coming to application and responding back with Hello World
//This piece of code is refered as Request Delegate in asp.net middleware
//In particular this is an example of inline middleware because we have written inline in the startup class
//Request Delegates or middleware can be configured in 3 main methods
//1. app.Run() -> it recieve only a context parameter it doesnt know about next/other delegate this delegate are also known as terminal delegates
//because it terminates or ends the middleware pipeline. It is more of the convention to use Run() to indicate that it is end of the pipeline.

app.Run(async context => await context.Response.WriteAsync("Hello World"));

//This not going to invoke the first one terminates the old pipeline
app.Run(async context => await context.Response.WriteAsync("Hello again"));


//2. app.Use()
app.Use( async(context , next) => { Console.WriteLine("Before Request"); await next(); Console.WriteLine("After Request"); });
//For Use() it takes context and next parameter. We have chained the
//


//3. app.Map()
            


 
